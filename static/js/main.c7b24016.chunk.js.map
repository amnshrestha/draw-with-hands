{"version":3,"sources":["logo.svg","assets/images/blackDot.png","Components/CameraCode.js","App.js","reportWebVitals.js","index.js"],"names":["CameraCode","className","width","height","aria-label","id","value","selected","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAAe,I,KCAA,I,MCKA,SAASA,IACpB,OACA,sBAAKC,UAAU,cAAf,UACI,wBAAQA,UAAU,gBAAgBC,MAAM,SAASC,OAAO,UACxD,gCACI,uBAAOF,UAAU,cAAcC,MAAM,SAErC,yBAAQE,aAAW,UAAUC,GAAG,gBAAhC,UACI,wBAAQC,MAAM,QAAQC,UAAQ,EAA9B,mBACA,wBAAQD,MAAM,SAAd,uBAGJ,yBAAQF,aAAW,aAAaC,GAAG,kBAAnC,UACI,wBAAQC,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAKC,UAAQ,EAA3B,gBACA,wBAAQD,MAAM,KAAd,mBAEJ,yBAAQF,aAAW,QAAQC,GAAG,cAA9B,UACI,wBAAQC,MAAM,UAAd,iBACA,wBAAQA,MAAM,UAAUC,UAAQ,EAAhC,mBACA,wBAAQD,MAAM,UAAd,kBACA,wBAAQA,MAAM,UAAd,sBAEJ,wBAAQE,KAAK,SAASP,UAAU,iBAAiBI,GAAG,cAApD,gCClBGI,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAACD,EAAD,OCMSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c7b24016.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/blackDot.e566383f.png\";","import React from 'react'\n\nimport MainScript from './MainScript'\nimport blackDot from '../assets/images/blackDot.png'\n\nexport default function CameraCode() {\n    return (\n    <div className=\"videoPlaces\">\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n        <div>\n            <video className=\"input_video\" width=\"100%\"></video>\n\n            <select aria-label=\"Utensil\" id=\"utensilSelect\">\n                <option value=\"brush\" selected >Brush</option>\n                <option value=\"eraser\" >Eraser</option>\n                {/* <option value=\"line\">Line</option> */}\n            </select>\n            <select aria-label=\"Brush Size\" id=\"brushSizeSelect\">\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"15\" selected>15</option>\n                <option value=\"20\">20</option>\n            </select>\n            <select aria-label=\"Color\" id=\"colorSelect\">\n                <option value=\"#C14D34\">Red</option>\n                <option value=\"#000000\" selected>Black</option>\n                <option value=\"#3867C5\">Blue</option>\n                <option value=\"#60AC49\">Green</option>\n            </select>\n            <button type=\"button\" className=\"btn btn-danger\" id=\"clearScreen\">Clear Screen</button>\n\n            \n        </div>\n    </div> \n  \n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport CameraCode from './Components/CameraCode';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CameraCode/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}